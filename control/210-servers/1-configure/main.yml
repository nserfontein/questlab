---

- hosts: localhost
  vars_files: variables.yml
  connection: local
  become: no
  gather_facts: no

  tasks:

    - name: Wait for DNS propagation
      shell: ping -c 1 {{ rancher_host }}
      register: ping_status
      until: ping_status is success
      delay: 10
      retries: 300
      tags: focus

- hosts: all
  vars_files: variables.yml
  gather_facts: no

  pre_tasks:

    - name: Wait for servers
      wait_for_connection:

    - name: Upgrade packages (retry until dpkg unlocked)
      apt:
        update_cache: yes
        upgrade: yes
        cache_valid_time: 86400 # 1 day
      register: apt_status
      until: apt_status is success
      delay: 10
      retries: 20

    - name: Upgrade packages 2 (retry until dpkg unlocked) # FIXME: wait for lock
      apt:
        update_cache: yes
        upgrade: yes
        cache_valid_time: 86400 # 1 day
      register: apt_status
      until: apt_status is success
      delay: 10
      retries: 10

  tasks:

    - name: Install Docker
      shell: curl {{ docker_install_script }} | sh
      args:
        creates: /usr/bin/docker
      register: apt_status  # FIXME: wait for lock
      until: apt_status is success
      delay: 10
      retries: 10

    - name: Add cloud user to Docker group
      user:
        name: cloud
        groups: docker
        append: yes

    - name: Install Python dependencies
      apt:
        name:
          - python3-setuptools
          - python3-pip
        state: present

    - name: Install Python modules
      pip:
        name:
          - docker
          - python-consul

- hosts: rancher
  vars_files: variables.yml

  tasks:

    - name: Install tools
      apt:
        name: mysql-client

    - name: Run Consul
      docker_container:
        name: consul
        image: consul:{{ consul_version }}
        restart_policy: unless-stopped
        ports:
          - "8500:8500"

    - name: Run Rancher
      docker_container:
        name: rancher
        image: rancher/rancher:v{{ rancher_version }}
        restart_policy: unless-stopped
        ports:
          - "80:80"
          - "443:443"

    - name: Wait for Consul
      wait_for:
        port: 8500

    - name: Wait for Rancher
      wait_for:
        port: 443

    - name: Create Rancher directory
      file:
        path: /opt/rancher
        state: directory

    - name: Check if Rancher token exists
      consul_kv:
        key: rancher/token
      register: rancher_token

    - block:

        - name: Rancher Login (retry until Rancher accepts requests)
          uri:
            url: "https://127.0.0.1/v3-public/localProviders/local?action=login"
            method: POST
            body_format: json
            validate_certs: no
            headers:
              content-type: "application/json"
            body:
              username: "{{ rancher_username }}"
              password: "{{ rancher_password }}"
              # ttl: 57600000
            status_code: 201
          register: login_result
          until: login_result.status == 201
          retries: 60
          delay: 1

        - name: Create Rancher token
          uri:
            url: "{{ rancher_api_url }}/token"
            method: POST
            body_format: json
            validate_certs: no
            headers:
              content-type: "application/json"
              Cookie: "R_USERNAME={{ rancher_username }}; R_SESS={{ login_result.json | json_query('token') }}"
            body:
              current: false
              enabled: true
              expired: false
              isDerived: false
              ttl: 0
              type: token
              description: sandbox token
            status_code: 201
          register: token_result

        - name: Save Rancher token
          consul_kv:
            key: rancher/token
            value: "{{ token_result.json | json_query('token') }}"

      # end of block
      when: rancher_token.data == None

    - name: Get Rancher Token
      consul_kv:
        key: rancher/token
      register: rancher_token

    - name: Install kubectl
      get_url:
        url: "{{ kubectl_url }}"
        dest: /usr/bin/kubectl
        mode: 0777

    - name: Extract Rancher CLI
      unarchive:
        src: "{{ rancher_cli_url }}"
        dest: /opt/rancher
        remote_src: yes

    - name: Move Rancher CLI to /usr/local/bin
      command: mv /opt/rancher/rancher-v{{ rancher_cli_version }}/rancher /usr/local/bin/

    - name: Login Rancher CLI - privileged
      shell: rancher login {{ rancher_api_url }} --token {{ rancher_token.data.Value }} --skip-verify

    - name: Login Rancher CLI - non-privileged
      become: no
      shell: rancher login {{ rancher_api_url }} --token {{ rancher_token.data.Value }} --skip-verify

    - name: Add rancher login to bashrc # FIXME: hardcode
      lineinfile:
        path: "{{ item }}/.bashrc"
        regexp: '^rancher login '
        line: rancher login {{ rancher_api_url }} --token {{ rancher_token.data.Value }} --skip-verify
      with_items:
        - /home/cloud
        - /root

    - name: Publish Rancher directory
      docker_container:
        name: nginx
        image: nginx
        restart_policy: unless-stopped
        ports:
          - "81:80"
        volumes:
          - /opt/rancher/:/usr/share/nginx/html

    - pause:
        prompt: "Wait for servers to stabilize"
        seconds: 30

- hosts: localhost
  vars_files: variables.yml
  connection: local
  become: no
  gather_facts: no

  tasks:

    - name: Wait for DNS propagation
      shell: ping -c 1 {{ rancher_host }}
      register: ping_status
      until: ping_status is success
      delay: 10
      retries: 300
      tags: focus
